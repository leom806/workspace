#<AdxTL>@(#)0.0.0.0 $Revision$ 
#---------------------------------------------------------------------------------------------------#
#                                 Ottech - Serviços e Tecnologia                                    #
#---------------------------------------------------------------------------------------------------#
#                                                                                                   #
#     Arquivo    :   CNSCSISPE.src                                                                  #
#     Autor(es)  :   Leonardo Momente (adaptado por Breno Velasco)                                  #
#     Data       :   22-09-2017                                                                     #
#     Descrição  :   [Vendas > Lista Faturas] Inclusão de filtro para os novos campos de NF-e.      #
#     Atualizado :   24-10-2017                                                                     #
#                                                                                                   #
#---------------------------------------------------------------------------------------------------#

#Ações da tela
$ACTION
  Case ACTION
    When "OUVRE"       : Gosub OUVRE
    When "FILTRE"      : Gosub FILTRE
    When "AV_AFFICHE"  : Gosub AV_AFFICHE
    When "APRES_MODIF" : Gosub APRES_MODIF
  Endcase
Return

# Ação que realiza a abertura de tabelas
$OUVRE
  If !clalev ([F:SIH])   : Local File SINVOICE[SIH]      : Endif
  If !clalev ([F:XQSIH]) : Local File XQINVOICE[XQSIH]   : Endif
Return

# Ação que filtra o resultado a partir dos campos da customização
$FILTRE
If GFONCTION = "CONSCSI"

  Local Integer ZERAR : ZERAR = 0
  Local Integer FLAG_INI : FLAG_INI = 0
  Local Integer FLAG_FIM : FLAG_FIM = 0

  Filter [XQSIH]

  # ID Comentario: 01
  # Se o campo não estiver vazio, a tabela é filtrada e o primeiro registro encontrado é lido.
  # Se for um registro valido, ele atribui ao WFIL. Senão, ele lê o próximo e realiza a atribuição.
  If [M:CSI1]ZNUMNFEINI <> ""
    Filter [XQSIH]
    Filter [XQSIH] Where NUMNFE >= [M:CSI1]ZNUMNFEINI Order By [F:XQSIH]NUMNFE Asc
    Read [XQSIH] First

    WFIL += " & NUM >='"+[F:XQSIH]NUM+"'"
  Endif

  # ID Comentario: 01
  If [M:CSI1]ZNUMNFEFIM <> ""
    Filter [XQSIH]
    Filter [XQSIH] Where NUMNFE <= [M:CSI1]ZNUMNFEFIM Order By [F:XQSIH]NUMNFE Asc
    Read [XQSIH] Last

    WFIL += " & NUM <= '" + [F:XQSIH]NUM+"'"
  Endif

  #############################################################
  ### MUDANÇA DIA 07/12 ###

  If [M:CSI1]ZCHAVENFE <> ""
    Filter [XQSIH]
    Filter [XQSIH] Where CHAVENFE = [M:CSI1]ZCHAVENFE Order By [F:XQSIH]NUMNFE Asc
    Read [XQSIH] First

    WFIL += " & NUM ='"+[F:XQSIH]NUM+"'"
  Endif

  #############################################################

  If [M:CSI1]ZSERNFEINI <> ""
    Filter [XQSIH]
    Filter [XQSIH] Where SERNFE = [M:CSI1]ZSERNFEINI  Order By NUMNFE Asc
    Read [XQSIH] Last

    WFIL += " & NUM<='"+[F:XQSIH]NUM+"'"
  Endif

  If [M:CSI1]ZSERNFEFIM <> ""
    Filter [XQSIH]
    Filter [XQSIH] Where SERNFE = [M:CSI1]ZSERNFEFIM # Order By NUMNFE Asc
    Read [XQSIH] First

    WFIL += " & NUM>='" + [F:XQSIH]NUM+"'"
  Endif

  # ID Comentario: 02
  # Se o campo não estiver vazio, a tabela é filtrada e o primeiro registro encontrado é lido.
  # Por ser um campo de data, poderão haver registros que não conterão a data colocada. Neste caso,
  # não havendo compatibilidade, é lido o próximo.
  # O critério do WFIL é realizado a partir do BPRDAT da tabela SIH, para tentar simular ao máximo
  # o comportamento do tratamento Standard.
  If [M:CSI1]ZDATAINI <> [0/0/0]
    Filter [XQSIH]
    Filter [XQSIH] Where DTENVSEFAZ >= [M:CSI1]ZDATAINI Order By DTENVSEFAZ Asc
    Read [XQSIH] First

    #If [M:CSI1]ZDATAINI <> [F:XQSIH]DTENVSEFAZ
    #  Filter [XQSIH] Where DTENVSEFAZ > [M:CSI1]ZDATAINI Order By NUMNFE Asc
    #  Read [XQSIH] First
    #Endif

    #If [M:CSI1]ZDATAINI <> [F:XQSIH]DTENVSEFAZ
    #  ZERAR = 1
    #Endif

    Read [SIH]SIH0 = [F:XQSIH]NUM
    Local Date DATA_INICIO : DATA_INICIO = [F:SIH]BPRDAT
    WFIL += "& BPRDAT>=" + func TODATE(DATA_INICIO)

    FLAG_INI = 1
  Endif

  # ID Comentario: 02
  If [M:CSI1]ZDATAFIM <> [0/0/0]
    Filter [XQSIH]
    Filter [XQSIH] Where DTENVSEFAZ <= [M:CSI1]ZDATAFIM Order By DTENVSEFAZ Asc
    Read [XQSIH] Last

    #If [M:CSI1]ZDATAFIM <> [F:XQSIH]DTENVSEFAZ
    #  Filter [XQSIH] Where DTENVSEFAZ < [M:CSI1]ZDATAFIM Order By NUMNFE Asc
    #  Read [XQSIH] Last
    #Endif

    #If [M:CSI1]ZDATAFIM <> [F:XQSIH]DTENVSEFAZ
    #  ZERAR = 1
    #Endif

    Read [SIH]SIH0 = [F:XQSIH]NUM
    Local Date DATA_FIM : DATA_FIM = [F:SIH]BPRDAT
    WFIL += "& BPRDAT<=" + func TODATE(DATA_FIM)

    FLAG_FIM = 1
  Endif

  #If ZERAR = 1
  #  WFIL = "1 + 1 = 0"
  #Endif

  Filter [XQSIH]

  If FLAG_INI = 1 & FLAG_FIM = 0
    Filter [XQSIH] Where DTENVSEFAZ >= [M:CSI1]ZDATAINI Order By DTENVSEFAZ Asc
    Infbox "FLAG_INI"
  Endif

  If FLAG_INI = 0 & FLAG_FIM = 1
    Filter [XQSIH] Where DTENVSEFAZ <= [M:CSI1]ZDATAFIM Order By DTENVSEFAZ Asc
    Infbox "FLAG_FIM"
  Endif

  If FLAG_INI = 1 & FLAG_FIM = 1
    Filter [XQSIH] Where DTENVSEFAZ >= [M:CSI1]ZDATAINI & DTENVSEFAZ <= [M:CSI1]ZDATAFIM Order By DTENVSEFAZ Asc
    Infbox "FLAG_INI | FLAG_FIM"
  Endif

  Local Integer I : I = 0

  For [XQSIH]
    #If FLAG_INI = 0 & FLAG_FIM = 1
    #  Infbox NUM
    #Endif
    I+=1
  Next

  Infbox num$(I)

  If I = 0
    WFIL = "1 + 1 = 0"
  Endif

Endif

Return

# Ação que mostra os resultados da consulta no campo grid
$AV_AFFICHE
  If GFONCTION = "CONSCSI"

    Filter [XQSIH]

    For I=0 To [M:CSI2]NBLIG-1
      Read [F:XQSIH]XQIH0  = [M:CSI2]NUM(I)

      [M:CSI2]ZNUMNFE(I)   = [F:XQSIH]NUMNFE
      [M:CSI2]ZCHAVENFE(I) = [F:XQSIH]CHAVENFE
      [M:CSI2]ZTOTNF(I)    = [F:XQSIH]TOTNF
      [M:CSI2]ZSERNFE(I)   = [F:XQSIH]SERNFE
      [M:CSI2]ZDATANFE(I)  = [F:XQSIH]DTENVSEFAZ
      [M:CSI2]ZCODOPF(I)   = [F:XQSIH]CODOPF

    Next I

    Affzo [M:CSI2]NUM
  Endif

  # Apaga as linhas sem nota fiscal
  Local Integer QNTD : QNTD = -1
  For I=0 To [M:CSI2]NBLIG-1
    If ([M:CSI2]ZNUMNFE(I)="")
      Dela I [M:CSI2]NBLIG
      QNTD += 1
    Endif

    Next I

    If (QNTD > -1)
      [M:CSI2]NBLIG -= QNTD
    Endif

  Affzo [M:CSI1]
Return

# Ação que é chamada toda vez que acontece alguma alteração em algum campo.
# Aqui, os campos de Chave NF-e são desabilitados caso os campos de NF-e estejam vazios.

$APRES_MODIF
Return

# ==================================================================== #
# -------------------------- Ações de campo -------------------------- #
# ==================================================================== #

Subprog AM_ZNUMNFEINI(VALEUR)
Variable Char    VALEUR()
  If VALEUR <> ""
    Call FORMATA_NFE(VALEUR)
    [M:CSI1]ZNUMNFEINI = VALEUR

    Filter [XQSIH]
  Endif
End

Subprog AM_ZNUMNFEFIM(VALEUR)
Variable Char    VALEUR()
  If VALEUR <> ""
    Call FORMATA_NFE(VALEUR)
    [M:CSI1]ZNUMNFEFIM = VALEUR

    Filter [XQSIH]
  Endif
End


###################################################

Subprog S_ZSERNFEINI(VALEUR)
Variable Char    VALEUR()
  Gosub TRATA_SERIE

  Local Tinyint OP
  Selbox SELECAO Titled 'Séries NF-e' Using OP

  If OP>0
    VALEUR = SELECAO(OP-1)
  Endif
End

###################################################

Subprog S_ZSERNFEFIM(VALEUR)
Variable Char    VALEUR()
  Gosub TRATA_SERIE

  Local Tinyint OP
  Selbox SELECAO Titled 'Séries NF-e' Using OP

  If OP>0
    VALEUR = SELECAO(OP-1)
  Endif
End

# ==================================================================== #
# --------------------------- Subprogramas --------------------------- #
# ==================================================================== #

$TRATA_SERIE
  Local Integer COUNT, LIMITE : LIMITE = rowcount([F:XQSIH])
  Local Integer A(LIMITE), B(LIMITE)

  # Local Char SELECAO(2)(1..) # DONT
  Local Integer I : I=1 #

  For [XQSIH]
    A(COUNT) = val([F:XQSIH]SERNFE)
    COUNT += 1
  Next


  Call UNIQUE(A,B)

  Local Integer TAMANHO_MAROTO : TAMANHO_MAROTO = 0
  I = 0
  For [XQSIH]
    If B(I) <> 0
      TAMANHO_MAROTO+=1
    Endif
    I+=1
  Next

  Local Char SELECAO(2)(TAMANHO_MAROTO)

  Local Integer J
  For I=0 To LIMITE - 1
    If B(I) <> 0
      SELECAO(J) = num$(B(I))  # Infbox num$(B(I))
      J += 1
    Endif
  Next I

End

Subprog FORMATA_NFE(VALOR)
Variable Char VALOR()
  Local Integer TAM
  TAM = len(VALOR)

  If (TAM < 9)
    Local Integer ZEROS
    ZEROS = 9 - TAM

    For I = 0 To ZEROS - 1
      VALOR = "0"+VALOR
    Next I
  Endif
End

Funprog TODATE(DATA)
  Value Date DATA
  Local Char AUX(50)
  AUX = "["+num$(day(DATA))+"/"+num$(month(DATA))+"/"+num$(year(DATA))+"]"
End AUX



# Remove duplicatas de um array
# ------------------------------
Subprog UNIQUE(ARRAY, ARRAY_RET)
  Value Integer ARRAY
  Variable Integer ARRAY_RET

  # Verifica
  If(dim(ARRAY) < dim(ARRAY_RET))
    Call ECR_TRACE("Tamanho dos arrays são incompatíveis.", 1) From GESECRAN
    End
  Endif

  # Inicializa
  Local Integer ARRAY_(dim(ARRAY)) # Array para comparar os valores
  Local Integer ELEMENTO

  # Copia
  For I=0 To dim(ARRAY)-1
    ARRAY_(I) = ARRAY(I)
  Next I

  # Remove
  For I=0 To dim(ARRAY)-1
    ELEMENTO = ARRAY(I)

    For J=I+1 To dim(ARRAY_)-1

      If ELEMENTO=ARRAY_(J)
        ARRAY(I) = -1
        Break
      Endif

    Next J
  Next I

  # Conta
  Local Integer QNTD_ELEMENTOS : QNTD_ELEMENTOS = 0
  For I=0 To dim(ARRAY)-1
    If ARRAY(I)<>-1
      QNTD_ELEMENTOS += 1
    Endif
  Next I

  # Retorna
  Local Integer CONTADOR : CONTADOR = 0
  For I=0 To dim(ARRAY)-1
    If ARRAY(I)<>-1
      ARRAY_RET(CONTADOR) = ARRAY(I)
      CONTADOR += 1
    Endif
  Next I

  # Ordena
  Sorta ARRAY_RET


  End

